{"version":3,"sources":["components/NavBar.jsx","services/logService.js","services/httpService.js","services/authService.js","components/commons/tableHeader.jsx","components/commons/tableBody.jsx","components/commons/table.jsx","components/commons/like.jsx","components/moviesTable.jsx","components/commons/listGroup.jsx","components/commons/pagination.jsx","components/commons/searchBox.jsx","services/fakeGenreService.js","services/fakeMovieService.js","utils/paginate.js","components/Movies.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/commons/input.jsx","components/commons/select.jsx","components/commons/form.jsx","services/movieService.js","components/movieForm.jsx","services/genreService.js","components/loginForm.jsx","components/commons/logout.jsx","components/commons/protectedRoute.jsx","services/userService.js","components/registerForm.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","user","className","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","Fragment","name","init","log","error","console","axios","interceptors","response","use","status","logger","toast","Promise","reject","get","post","delete","put","setJwt","jwt","defaults","headers","common","apiEndpoint","apiUrl","email","password","a","http","data","localStorage","setItem","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","TableHeader","renderSortIcon","column","sortColumn","props","path","order","this","onSort","columns","map","key","onClick","raiseSort","label","Component","TableBody","renderCell","item","content","_","createKey","_id","Table","Like","classes","liked","aria-hidden","style","cursor","MoviesTable","movie","title","onLike","deleteColumn","onDelete","auth","isAdmin","push","movies","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","Pagination","onPageChange","itemsCount","pageSize","currentPage","pagesCount","Math","ceil","pages","range","page","SearchBox","value","onChange","placeholder","e","currentTarget","genres","genre","numberInStock","dailyRentalRate","publishDate","deleteMovie","movieInDb","find","m","splice","indexOf","paginate","pageNumber","startIndex","lodash","slice","take","Movies","state","searchQuery","selectedGenre","handleDelete","originalMovies","filter","setState","handleLike","index","handlePageChange","handleGenreSelect","handleSort","handleSearch","query","getPagedData","allMovies","filteredMovies","toLowerCase","startsWith","orderBy","totalCount","length","g","count","marginBottom","Customers","Rentals","NotFound","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleChange","input","errorMessage","handleSubmit","preventDefault","doSubmit","disabled","movieUrl","getMovie","movieId","saveMovie","body","MovieForm","genreId","string","required","number","min","max","history","match","params","mapToViewModel","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","location","window","from","pathname","Redirect","Logout","ProtectedRoute","component","render","Route","register","RegisterForm","minDomainAtoms","userService","App","Switch","exact","Boolean","hostname","process","ReactDOM","BrowserRouter","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c4aba9b0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link active\" to=\"/vidly/movies\">\r\n            Movies <span className=\"sr-only\">(current)</span>\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/vidly/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/vidly/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/vidly/login\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/vidly/register\">\r\n                Register\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/vidly/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/vidly/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","// import * as Sentry from '@sentry/react';\r\n\r\nfunction init() {\r\n    // Sentry.init({ dsn: \"https://1192abdca52944cfb4d1c459611bffa2@o415079.ingest.sentry.io/5305619\" });\r\n}\r\n\r\nfunction log(error) {\r\n    // Sentry.captureException(error);\r\n    console.log(error)\r\n}\r\n\r\nexport default {\r\n    init,\r\n    log\r\n}","import axios from 'axios';\r\nimport logger from './logService'\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\naxios.interceptors.response.use(null, error => {\r\n    const expectedError =\r\n        error.response &&\r\n        error.response.status >= 400 &&\r\n        error.response.status < 500;\r\n\r\n    if (!expectedError) {\r\n        logger.log(error);\r\n        console.log(\"Logging the error -> \", error);\r\n        toast.error(\"An unexpected error occured.\");\r\n    }\r\n    return Promise.reject(error)\r\n})\r\n\r\nexport function setJwt(jwt) {\r\n    axios.defaults.headers.common['x-auth-token'] = jwt;\r\n}\r\n\r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    delete: axios.delete,\r\n    put: axios.put,\r\n    setJwt\r\n};","import http from './httpService';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { apiUrl } from '../config.json'\r\n\r\nconst apiEndpoint = apiUrl + '/auth';\r\nconst tokenKey = \"token\"\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n    const { data: jwt } = await http.post(apiEndpoint, { email, password })\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    try {\r\n        const jwt = localStorage.getItem(tokenKey);\r\n        const user = jwtDecode(jwt);\r\n        return user\r\n    } catch (ex) {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction getJwt() {\r\n    return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n    login, loginWithJwt, logout, getCurrentUser\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort(path) {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  }\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody data={data} columns={columns} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Like extends Component {\r\n  render() {\r\n    let classes = \"fa fa-heart\";\r\n    if (!this.props.liked) classes += \"-o\";\r\n    return (\r\n      <i\r\n        onClick={this.props.onClick}\r\n        className={classes}\r\n        aria-hidden=\"true\"\r\n        style={{ cursor: \"pointer\" }}\r\n      ></i>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\nimport Table from \"./commons/table\";\r\nimport Like from \"./commons/like\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => (\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      ),\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (movie) => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger\"\r\n      >\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n        data={movies}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = (props) => {\r\n  const {\r\n    items,\r\n    textProperty,\r\n    valueProperty,\r\n    onItemSelect,\r\n    selectedItem,\r\n  } = props;\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem\r\n              ? \"clickable list-group-item active\"\r\n              : \"clickable list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst Pagination = ({ onPageChange, itemsCount, pageSize, currentPage }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={currentPage === page ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <button onClick={() => onPageChange(page)} className=\"page-link\">\r\n              {page}\r\n            </button>\r\n          </li>\r\n          //button element above, was supposed to be an 'anchor / a' elemeent, resulted in warning\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  onPageChange: propTypes.func.isRequired,\r\n  itemsCount: propTypes.number.isRequired,\r\n  pageSize: propTypes.number.isRequired,\r\n  currentPage: propTypes.number.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\"\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import lodash from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return lodash(items).slice(startIndex).take(pageSize).value();\r\n\r\n}","import React, { Component } from \"react\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport ListGroup from \"./commons/listGroup\";\r\nimport Pagination from \"./commons/pagination\";\r\nimport SearchBox from \"./commons/searchBox\";\r\n// import { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getMovies, deleteMovie } from \"../services/fakeMovieService\";\r\n// import { getGenres } from \"../services/genreService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    genres: [],\r\n    movies: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  componentDidMount() {\r\n    // const { data } = getGenres();\r\n    const genres = [{ name: \"All Genres\", _id: \"\" }, ...getGenres()];\r\n\r\n    // const { data: movies } = getMovies();\r\n    const movies = getMovies();\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleDelete = (movie) => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n\r\n    try {\r\n      deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"This movie has already been deleted\");\r\n\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    // movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies: movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      currentPage,\r\n      pageSize,\r\n      movies: allMovies,\r\n      selectedGenre,\r\n      sortColumn,\r\n      searchQuery,\r\n    } = this.state;\r\n\r\n    let filteredMovies = allMovies;\r\n\r\n    if (searchQuery)\r\n      filteredMovies = allMovies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filteredMovies = allMovies.filter(\r\n        (m) => m.genre._id === selectedGenre._id\r\n      );\r\n\r\n    const sortedMovies = _.orderBy(\r\n      filteredMovies,\r\n      sortColumn.path,\r\n      sortColumn.order\r\n    );\r\n\r\n    const movies = paginate(sortedMovies, currentPage, pageSize);\r\n\r\n    return { totalCount: filteredMovies.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const {\r\n      currentPage,\r\n      pageSize,\r\n      genres,\r\n      selectedGenre,\r\n      sortColumn,\r\n      searchQuery,\r\n    } = this.state;\r\n    const { user } = this.props;\r\n\r\n    if (count === 0) return <p> There are no movies in database</p>;\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-2\">\r\n          <ListGroup\r\n            items={genres}\r\n            onItemSelect={this.handleGenreSelect}\r\n            selectedItem={selectedGenre}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && (\r\n            <Link\r\n              to=\"movies/new\"\r\n              className=\"btn btn-primary\"\r\n              style={{ marginBottom: 20 }}\r\n            >\r\n              New Movie\r\n            </Link>\r\n          )}\r\n          <p>Showing {totalCount} movies in database</p>\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <MoviesTable\r\n            movies={movies}\r\n            sortColumn={sortColumn}\r\n            onDelete={this.handleDelete}\r\n            onLike={this.handleLike}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Page Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        // value={value}\r\n        // onChange={onChange}\r\n        // type={type}\r\n        // placeholder={placeholder}\r\n        {...rest}\r\n        id={name}\r\n        name={name}\r\n        className=\"form-control\"\r\n      />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select id={name} name={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const option = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, option);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-lg btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        // placeholder={placeholder}\r\n        error={errors[name]}\r\n        type={type}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import http from './httpService';\r\nimport { apiUrl } from '../config.json'\r\n\r\n\r\nconst apiEndpoint = apiUrl + '/movies';\r\n\r\nfunction movieUrl(id) {\r\n    return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n    return http.get(apiEndpoint);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n    return http.delete(movieUrl(movieId));\r\n}\r\n\r\nexport async function getMovie(movieId) {\r\n    return http.get(movieUrl(movieId))\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n    if (movie._id) {\r\n        const body = { ...movie };\r\n        delete body._id;\r\n        return http.put(movieUrl(movie._id), body);\r\n    }\r\n    return http.post(apiEndpoint, movie)\r\n}","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./commons/form\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    genres: [],\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genreId: Joi.string().required().label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\"),\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre.id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import http from './httpService';\r\nimport { apiUrl } from '../config.json'\r\n\r\nexport function getGenres() {\r\n    return http.get(apiUrl + '/genres');\r\n}\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./commons/form\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await auth.login(data.username, data.password);\r\n\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import { Component } from \"react\";\r\nimport auth from \"../../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import http from './httpService';\r\nimport { apiUrl } from '../config.json'\r\n\r\nconst apiEndpoint = apiUrl + '/users';\r\n\r\nexport function register(user) {\r\n    return http.post(apiEndpoint, {\r\n        email: user.username,\r\n        password: user.password,\r\n        name: user.name\r\n    })\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./commons/form\";\r\nimport * as userService from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .email({ minDomainAtoms: 2 })\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string().min(5).required().label(\"Password\"),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      // the line below should be if (ex.response && ex.response === 400),\r\n      // because we need to check if there is an error and if that error status is 400,\r\n      // however, beacuse we got 2 errors every time we click the button,\r\n      // we decide to try on 1 of the conditions, and the line below works.\r\n      if (ex.response) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, { Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify';\nimport NavBar from './components/NavBar';\nimport Movies from './components/Movies';\nimport Customers from './components/customers'\nimport Rentals from './components/rentals'\nimport NotFound from './components/notFound'\nimport MovieForm from './components/movieForm';\nimport LoginForm from './components/loginForm';\nimport Logout from './components/commons/logout';\nimport ProtectedRoute from './components/commons/protectedRoute';\nimport RegisterForm from './components/registerForm';\nimport auth from './services/authService';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nclass App extends Component {\n  state = {}\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user })\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return <React.Fragment>\n      <ToastContainer />\n      <NavBar user={user} />\n      <main className=\"container\">\n        <Switch>\n          <Route path=\"/vidly/register\" component={RegisterForm} />\n          <Route path=\"/vidly/login\" component={LoginForm} />\n          <Route path=\"/vidly/logout\" component={Logout} />\n          <ProtectedRoute\n            path=\"/vidly/movies/:id\"\n            component={MovieForm}\n          />\n          <Route\n            path=\"/vidly/movies\"\n            render={props => <Movies {...props} user={this.state.user} />}\n          />\n          <Route path=\"/vidly/customers\" component={Customers} />\n          <Route path=\"/vidly/rentals\" component={Rentals} />\n          <Route path=\"/vidly/not-found\" component={NotFound} />\n          <Redirect from=\"/\" exact to=\"/vidly/movies\" />\n          <Redirect from=\"/vidly\" exact to=\"/vidly/movies\" />\n          <Redirect to=\"/vidly/not-found\" />\n        </Switch>\n\n      </main>\n      {/* <main className=\"container\">\n        <Movies />\n      </main> */}\n    </React.Fragment>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nconsole.log(process.env)\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}